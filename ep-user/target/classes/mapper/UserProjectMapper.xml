<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.weida.epuser.mapper.UserProjectMapper" >
  <resultMap id="BaseResultMap" type="com.weida.epuser.dto.UserProject" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="project_id" property="projectId" jdbcType="INTEGER" />
    <result column="read_flag" property="readFlag" jdbcType="INTEGER" />
    <result column="write_flag" property="writeFlag" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, project_id, read_flag, write_flag, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_project
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_project
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.weida.epuser.dto.UserProject" >
    insert into user_project (id, user_id, project_id, 
      read_flag, write_flag, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, 
      #{readFlag,jdbcType=INTEGER}, #{writeFlag,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.weida.epuser.dto.UserProject" >
    insert into user_project
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="readFlag != null" >
        read_flag,
      </if>
      <if test="writeFlag != null" >
        write_flag,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="readFlag != null" >
        #{readFlag,jdbcType=INTEGER},
      </if>
      <if test="writeFlag != null" >
        #{writeFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.weida.epuser.dto.UserProject" >
    update user_project
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="readFlag != null" >
        read_flag = #{readFlag,jdbcType=INTEGER},
      </if>
      <if test="writeFlag != null" >
        write_flag = #{writeFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.weida.epuser.dto.UserProject" >
    update user_project
    set user_id = #{userId,jdbcType=INTEGER},
      project_id = #{projectId,jdbcType=INTEGER},
      read_flag = #{readFlag,jdbcType=INTEGER},
      write_flag = #{writeFlag,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectUserProjects" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from user_project
    <where>
        <if test="userId != null">
          and user_id = #{userId,jdbcType=INTEGER}
        </if>
    </where>
  </select>
</mapper>