2021-03-24 21:44:32.284 [main] [INFO ] org.springframework.context.support.AbstractApplicationContext.prepareRefresh -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4659191b: startup date [Wed Mar 24 21:44:32 CST 2021]; root of context hierarchy
2021-03-24 21:44:32.668 [main] [INFO ] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init> -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2021-03-24 21:44:32.734 [main] [INFO ] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$48c5f178] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-24 21:44:37.848 [main] [INFO ] org.springframework.boot.SpringApplication.logStartupProfileInfo -No active profile set, falling back to default profiles: default
2021-03-24 21:44:37.868 [main] [INFO ] org.springframework.context.support.AbstractApplicationContext.prepareRefresh -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5829e4f4: startup date [Wed Mar 24 21:44:37 CST 2021]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4659191b
2021-03-24 21:44:38.797 [main] [INFO ] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition -Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2021-03-24 21:44:38.807 [main] [INFO ] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition -Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2021-03-24 21:44:39.156 [main] [INFO ] org.springframework.cloud.context.scope.GenericScope.setSerializationId -BeanFactory id=49eed83c-81bb-3db6-831f-9f9acebe82c4
2021-03-24 21:44:39.179 [main] [INFO ] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init> -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2021-03-24 21:44:39.418 [main] [INFO ] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$48c5f178] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-24 21:44:39.776 [main] [INFO ] org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize -Tomcat initialized with port(s): 8764 (http)
2021-03-24 21:44:39.804 [main] [INFO ] org.apache.juli.logging.DirectJDKLog.log -Initializing ProtocolHandler ["http-nio-8764"]
2021-03-24 21:44:39.816 [main] [INFO ] org.apache.juli.logging.DirectJDKLog.log -Starting service [Tomcat]
2021-03-24 21:44:39.817 [main] [INFO ] org.apache.juli.logging.DirectJDKLog.log -Starting Servlet Engine: Apache Tomcat/8.5.31
2021-03-24 21:44:39.825 [localhost-startStop-1] [INFO ] org.apache.juli.logging.DirectJDKLog.log -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\MinGW\bin;C:\texlive\2020\bin\win32;C:\Program Files (x86)\dotnet\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Apache\apache-maven\bin;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Program Files\dotnet\;C:\Program Files\PowerShell\7\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Python\Python39\Scripts\;C:\Python\Python39\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Win\AppData\Local\Microsoft\WindowsApps;C:\Users\Win\AppData\Local\Programs\Microsoft VS Code\bin;C:\Coq\bin;C:\cygwin64\bin;C:\Users\Win\AppData\Local\Pandoc\;C:\Users\Win\AppData\Roaming\npm;C:\Users\Win\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3.3\bin;;.]
2021-03-24 21:44:40.058 [localhost-startStop-1] [INFO ] org.apache.juli.logging.DirectJDKLog.log -Initializing Spring embedded WebApplicationContext
2021-03-24 21:44:40.058 [localhost-startStop-1] [INFO ] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext -Root WebApplicationContext: initialization completed in 2191 ms
2021-03-24 21:44:40.634 [localhost-startStop-1] [INFO ] com.netflix.config.sources.URLConfigurationSource.<init> -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-03-24 21:44:40.662 [localhost-startStop-1] [INFO ] com.netflix.config.DynamicPropertyFactory.getInstance -DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1d5cc9e6
2021-03-24 21:44:45.804 [localhost-startStop-1] [INFO ] org.springframework.cloud.commons.util.InetUtils.convertAddress -Cannot determine local hostname
2021-03-24 21:44:52.342 [localhost-startStop-1] [INFO ] org.springframework.cloud.commons.util.InetUtils.convertAddress -Cannot determine local hostname
2021-03-24 21:44:53.355 [localhost-startStop-1] [INFO ] org.springframework.boot.web.servlet.ServletRegistrationBean.addRegistration -Servlet dispatcherServlet mapped to [/]
2021-03-24 21:44:53.356 [localhost-startStop-1] [INFO ] org.springframework.boot.web.servlet.ServletRegistrationBean.addRegistration -Servlet zuulServlet mapped to [/zuul/*]
2021-03-24 21:44:53.362 [localhost-startStop-1] [INFO ] org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-03-24 21:44:53.362 [localhost-startStop-1] [INFO ] org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-03-24 21:44:53.362 [localhost-startStop-1] [INFO ] org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-03-24 21:44:53.362 [localhost-startStop-1] [INFO ] org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure -Mapping filter: 'requestContextFilter' to: [/*]
2021-03-24 21:44:53.362 [localhost-startStop-1] [INFO ] org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure -Mapping filter: 'httpTraceFilter' to: [/*]
2021-03-24 21:44:53.363 [localhost-startStop-1] [INFO ] org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure -Mapping filter: 'webMvcMetricsFilter' to: [/*]
2021-03-24 21:44:53.493 [main] [INFO ] com.netflix.config.sources.URLConfigurationSource.<init> -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-03-24 21:44:53.570 [main] [INFO ] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-03-24 21:44:53.835 [main] [INFO ] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5829e4f4: startup date [Wed Mar 24 21:44:37 CST 2021]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4659191b
2021-03-24 21:44:53.911 [main] [INFO ] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-03-24 21:44:53.912 [main] [INFO ] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-03-24 21:44:54.000 [main] [INFO ] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-03-24 21:44:54.000 [main] [INFO ] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-03-24 21:44:56.809 [main] [INFO ] org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized -Starting filter initializer
2021-03-24 21:44:56.914 [main] [INFO ] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> -Exposing 2 endpoint(s) beneath base path '/actuator'
2021-03-24 21:44:56.933 [main] [INFO ] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register -Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2021-03-24 21:44:56.934 [main] [INFO ] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register -Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2021-03-24 21:44:56.935 [main] [INFO ] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register -Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-03-24 21:44:57.017 [main] [INFO ] org.springframework.jmx.export.MBeanExporter.afterSingletonsInstantiated -Registering beans for JMX exposure on startup
2021-03-24 21:44:57.032 [main] [INFO ] org.springframework.jmx.export.MBeanExporter.autodetect -Bean with name 'environmentManager' has been autodetected for JMX exposure
2021-03-24 21:44:57.036 [main] [INFO ] org.springframework.jmx.export.MBeanExporter.autodetect -Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2021-03-24 21:44:57.037 [main] [INFO ] org.springframework.jmx.export.MBeanExporter.autodetect -Bean with name 'refreshScope' has been autodetected for JMX exposure
2021-03-24 21:44:57.045 [main] [INFO ] org.springframework.jmx.export.MBeanExporter.registerBeanInstance -Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2021-03-24 21:44:57.061 [main] [INFO ] org.springframework.jmx.export.MBeanExporter.registerBeanInstance -Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2021-03-24 21:44:57.079 [main] [INFO ] org.springframework.jmx.export.MBeanExporter.registerBeanInstance -Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5829e4f4,type=ConfigurationPropertiesRebinder]
2021-03-24 21:44:57.117 [main] [INFO ] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start -Starting beans in phase 0
2021-03-24 21:44:57.131 [main] [INFO ] org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create -Setting initial instance status as: STARTING
2021-03-24 21:44:57.195 [main] [INFO ] com.netflix.discovery.DiscoveryClient.<init> -Initializing Eureka in region us-east-1
2021-03-24 21:44:57.273 [main] [INFO ] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> -Using JSON encoding codec LegacyJacksonJson
2021-03-24 21:44:57.273 [main] [INFO ] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> -Using JSON decoding codec LegacyJacksonJson
2021-03-24 21:44:57.443 [main] [INFO ] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> -Using XML encoding codec XStreamXml
2021-03-24 21:44:57.443 [main] [INFO ] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> -Using XML decoding codec XStreamXml
2021-03-24 21:44:57.770 [main] [INFO ] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints -Resolving eureka endpoints via configuration
2021-03-24 21:44:59.630 [main] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry -Disable delta property : false
2021-03-24 21:44:59.631 [main] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry -Single vip registry refresh property : null
2021-03-24 21:44:59.631 [main] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry -Force full registry fetch : false
2021-03-24 21:44:59.631 [main] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry -Application is null : false
2021-03-24 21:44:59.632 [main] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry -Registered Applications size is zero : true
2021-03-24 21:44:59.632 [main] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry -Application version is -1: true
2021-03-24 21:44:59.632 [main] [INFO ] com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry -Getting all instance registry info from the eureka server
2021-03-24 21:44:59.991 [main] [INFO ] com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry -The response status is 200
2021-03-24 21:44:59.994 [main] [INFO ] com.netflix.discovery.DiscoveryClient.initScheduledTasks -Starting heartbeat executor: renew interval is: 30
2021-03-24 21:44:59.999 [main] [INFO ] com.netflix.discovery.InstanceInfoReplicator.<init> -InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-03-24 21:45:00.007 [main] [INFO ] com.netflix.discovery.DiscoveryClient.<init> -Discovery Client initialized at timestamp 1616593500004 with initial instances count: 0
2021-03-24 21:45:00.025 [main] [INFO ] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register -Registering application ep-zuul with eureka with status UP
2021-03-24 21:45:00.027 [main] [INFO ] com.netflix.discovery.DiscoveryClient$3.notify -Saw local status change event StatusChangeEvent [timestamp=1616593500027, current=UP, previous=STARTING]
2021-03-24 21:45:00.030 [DiscoveryClient-InstanceInfoReplicator-0] [INFO ] com.netflix.discovery.DiscoveryClient.register -DiscoveryClient_EP-ZUUL/localhost:ep-zuul:8764: registering service...
2021-03-24 21:45:00.102 [main] [INFO ] org.apache.juli.logging.DirectJDKLog.log -Starting ProtocolHandler ["http-nio-8764"]
2021-03-24 21:45:00.122 [main] [INFO ] org.apache.juli.logging.DirectJDKLog.log -Using a shared selector for servlet write/read
2021-03-24 21:45:00.162 [main] [INFO ] org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start -Tomcat started on port(s): 8764 (http) with context path ''
2021-03-24 21:45:00.166 [main] [INFO ] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent -Updating port to 8764
2021-03-24 21:45:00.172 [main] [INFO ] org.springframework.boot.StartupInfoLogger.logStarted -Started EpZuulApplication in 35.63 seconds (JVM running for 40.783)
2021-03-24 21:45:00.223 [DiscoveryClient-InstanceInfoReplicator-0] [INFO ] com.netflix.discovery.DiscoveryClient.register -DiscoveryClient_EP-ZUUL/localhost:ep-zuul:8764 - registration status: 204
2021-03-24 21:45:05.015 [RMI TCP Connection(7)-192.168.43.251] [INFO ] org.apache.juli.logging.DirectJDKLog.log -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-03-24 21:45:05.015 [RMI TCP Connection(7)-192.168.43.251] [INFO ] org.springframework.web.servlet.FrameworkServlet.initServletBean -FrameworkServlet 'dispatcherServlet': initialization started
2021-03-24 21:45:05.057 [RMI TCP Connection(7)-192.168.43.251] [INFO ] org.springframework.web.servlet.FrameworkServlet.initServletBean -FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2021-03-24 21:45:30.028 [DiscoveryClient-CacheRefreshExecutor-0] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry -Disable delta property : false
2021-03-24 21:45:30.029 [DiscoveryClient-CacheRefreshExecutor-0] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry -Single vip registry refresh property : null
2021-03-24 21:45:30.029 [DiscoveryClient-CacheRefreshExecutor-0] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry -Force full registry fetch : false
2021-03-24 21:45:30.029 [DiscoveryClient-CacheRefreshExecutor-0] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry -Application is null : false
2021-03-24 21:45:30.030 [DiscoveryClient-CacheRefreshExecutor-0] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry -Registered Applications size is zero : true
2021-03-24 21:45:30.030 [DiscoveryClient-CacheRefreshExecutor-0] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry -Application version is -1: false
2021-03-24 21:45:30.031 [DiscoveryClient-CacheRefreshExecutor-0] [INFO ] com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry -Getting all instance registry info from the eureka server
2021-03-24 21:45:30.137 [DiscoveryClient-CacheRefreshExecutor-0] [INFO ] com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry -The response status is 200
2021-03-24 21:46:00.188 [DiscoveryClient-CacheRefreshExecutor-0] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry -Disable delta property : false
2021-03-24 21:46:00.188 [DiscoveryClient-CacheRefreshExecutor-0] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry -Single vip registry refresh property : null
2021-03-24 21:46:00.189 [DiscoveryClient-CacheRefreshExecutor-0] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry -Force full registry fetch : false
2021-03-24 21:46:00.189 [DiscoveryClient-CacheRefreshExecutor-0] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry -Application is null : false
2021-03-24 21:46:00.189 [DiscoveryClient-CacheRefreshExecutor-0] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry -Registered Applications size is zero : true
2021-03-24 21:46:00.189 [DiscoveryClient-CacheRefreshExecutor-0] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry -Application version is -1: false
2021-03-24 21:46:00.189 [DiscoveryClient-CacheRefreshExecutor-0] [INFO ] com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry -Getting all instance registry info from the eureka server
2021-03-24 21:46:00.264 [DiscoveryClient-CacheRefreshExecutor-0] [INFO ] com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry -The response status is 200
2021-03-24 21:49:59.647 [AsyncResolver-bootstrap-executor-0] [INFO ] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints -Resolving eureka endpoints via configuration
2021-03-24 21:54:59.655 [AsyncResolver-bootstrap-executor-0] [INFO ] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints -Resolving eureka endpoints via configuration
2021-03-24 21:59:59.664 [AsyncResolver-bootstrap-executor-0] [INFO ] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints -Resolving eureka endpoints via configuration
2021-03-24 22:04:59.668 [AsyncResolver-bootstrap-executor-0] [INFO ] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints -Resolving eureka endpoints via configuration
2021-03-24 22:09:59.670 [AsyncResolver-bootstrap-executor-0] [INFO ] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints -Resolving eureka endpoints via configuration
2021-03-24 22:14:59.679 [AsyncResolver-bootstrap-executor-0] [INFO ] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints -Resolving eureka endpoints via configuration
2021-03-24 22:19:59.690 [AsyncResolver-bootstrap-executor-0] [INFO ] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints -Resolving eureka endpoints via configuration
