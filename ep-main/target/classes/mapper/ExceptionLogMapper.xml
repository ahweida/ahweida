<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.weida.epmain.mapper.ExceptionLogMapper" >
  <resultMap id="BaseResultMap" type="com.weida.epmain.dto.ExceptionLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="project_id" property="projectId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, project_id, create_time, description
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from exception_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from exception_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.weida.epmain.dto.ExceptionLog" >
    insert into exception_log ( project_id, create_time,
      description)
    values (#{projectId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.weida.epmain.dto.ExceptionLog" >
    insert into exception_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.weida.epmain.dto.ExceptionLog" >
    update exception_log
    <set >
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.weida.epmain.dto.ExceptionLog" >
    update exception_log
    set project_id = #{projectId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectExceptionLog" resultType="com.weida.epmain.dto.vo.ExceptionLogVO" parameterType="map" >
    select
        id, project_id projectId, create_time createTime, description
    from exception_log
    <where>
      <if test="description != null and description != ''">
        and description like concat('%', #{description,jdbcType=VARCHAR}, '%')
      </if>
      <if test="projectId != null">
        and project_id = #{projectId}
      </if>
      <if test="startTime != null and startTime !=''">
        <![CDATA[
              and create_time >= #{startTime,jdbcType=VARCHAR}
              ]]>
      </if>
      <if test="endTime != null and endTime !=''">
        <![CDATA[
              and create_time <= #{endTime,jdbcType=VARCHAR}
              ]]>
      </if>
    </where>
    order by id desc
  </select>
</mapper>